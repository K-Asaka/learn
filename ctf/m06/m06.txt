File Transfer Protocol


pcapファイルを解析し、Flagを見つける問題。

問題
次のファイルからFLAGを探してください。
FLAG文字列のフォーマットはctf4b{~}です。

問題ファイル   mondai6.zip
https://book.mynavi.jp/files/user/support/9784839962135/mondai6.zip

pcapファイルを開けるソフトウェアはいくつかあるが、ここではWireshark(https://www.wireshark.org)を使って開いてみる。
WiresharkはGUIで使えるオープンソースのネットワーク解析ソフトウェア。


パケットを解析する
次の手順で進める。
・調べるパケットの目星をつける
・必要なパケットのみ表示する
・絞り込んだパケットを解析する


・調べるパケットの目星をつける
WiresharkのPacket List画面で、各パケットのProtocolと書かれている部分に着目しながらいくつかのパケットを見てみると、問題のタイトルにもなっているFTPと表示されているパケットが確認できる。
FTPは、その名の通りサーバとクライアント間でネットワークを通じてファイルを転送する時に使われるアプリケーション層のプロトコル。サーバとクライアント共にこのプロトコルを実装した多くのソフトウェアがあるため、ファイルを複数人で共有するためのファイルサーバの用途としてよく使われる。
頻繁に利用されるFTPだが、設定によってはユーザ名やパスワードなどの認証情報、転送しているファイルの内容などを暗号化しないままクライアントとサーバ間で送受信が行われる。
今回の場合もFTPパケットは暗号化されていないため、パケットキャプチャによって通信内容を見ることができる。


・パケットをフィルタリングする
デフォルト画面のままでは、今回の解析に必要ないパケットも表示されている。
Wiresharkのフィルタリング機能(Display Filter)を使ってFTPに関連するパケットのみ表示する。
FTPに関連する条件式には、以下の2つがある。

条件式		意味
ftp		「FTPの制御用通信」をフィルタリング
ftp-data	「FTPのデータ用通信」をフィルタリング

フィルタの構文が2つに別れているのは、FTPがサーバとの接続を、制御用とデータ転送用の2つの接続に分ける仕様となっているため。したがって、フィルタ構文を片方指定しただけでは、FTPに関連するすべてのパケットを表示できない。
この場合or演算子を使用して、ftp or ftp-dataとすることで、2つの条件のどちらかを満たしたパケットを表示できる。


・絞り込んだパケットを解析する
FTPであればPacket ListのInfoの列にFTPサーバとの通信内容が表示される。
この部分を1つずつ見ていくと、Requestと、Responseの2種類があることがわかる。Requestではクライアントからサーバへ送信した要求(コマンド)を表示し、Responseではコマンドを実行した結果(レスポンスコードとメッセージ)を表示する。
FTPの通信を解析するには、表示されているコマンドの意味を理解することが必要不可欠。
今回使われているコマンドの意味は以下の通り。

コマンド：パラメータ	意味
USER：username		パラメータで指定したユーザ名でFTPサーバにログインする
PASS：password		USERコマンドで指定したユーザの認証に使用するパスワードを送信
CWD：directory path	パラメータで指定したpathにディレクトリを移動
PORT：h1,h2,h3,h5,p1,p2	パッシブモードで使用するIPアドレス(h1〜h5)、ポート番号(p1〜p2)を指定

LIST：directory path	パラメータで指定したpathにある(pathがない場合は作業ディレクトリ)ディレクトリ、ファイルの一覧を表示
RETR：file path		pathで指定したファイルをサーバからダウンロード
QUIT：-			FTPサーバからログアウトしてコネクションを切断

このリストを参考にRequestと表示されているパケットを見ていくと、クライアントは次のような操作を行なっていることがわかる。

1.FTPサーバに、ユーザ名:anonymous、パスワード:ctf4b@example.comでログイン
2.pubをカレントディレクトリに設定
3.カレントディレクトリ内のファイル・ディレクトリ一覧の取得
4.1.txt、2.zip、3.txtというファイルをダウンロード
5.通信切断

FTPサーバにログイン後、ファイルを3つダウンロードしている。ここまでFLAGに関係しそうな文字列が出てきていないことを考えると、このファイルの中にFLAGに繋がる情報が隠されている。


・ファイルの中身を調べる
ファイル本体はファイルダウンロードのコマンド(RETR)の直後、データ用の接続で転送されているのでパケットを探してみる。

●1.txt
1.txtが含まれるパケットは、No.45のパケット。
このパケットのPacket Details情報を見てみる。

FTP Dataの部分にctf4b{This_communication_isというFLAGの一部と思われる文字が確認できる。転送しているデータがASCIIだったため、Wiresharkが自動で変換して表示してくれる。


●2.zip
2.zipが含まれるパケットは、No.62のパケット。Packet DetailsのFTP Dataを同様に見てみると、「165byte」とデータサイズのみ書かれていてファイルの中身は見れない。
このファイルの中身をみるために、ここではWiresharkのFollow TCP Streamという機能を使う。これは選択したTCPセッションで送受信しているデータをまとめて表示する機能。2.zipが含まれるパケットを選択して右クリックし、そこからFollow->TCP Streamを選ぶ。

表示されたデータを見ると先頭がPKとなっているので、2.zipはファイル拡張子の通りZIP形式であることが確認できる。WiresharkではZIPファイルの中身を見ることは難しいため、このデータをファイルに保存して他のソフトウェアで開けるようにする。
送受信しているデータをファイルに保存するには、画面中断のShow and save data asの値をASCIIからRawに変更し、下段のSave asをクリックする。
ファイル保存後そのファイルを展開すると、新たにテキストファイルが作成される。そのテキストファイルの中身を見てみると、_notという文字列が確認できる。


●3.txt
3.txtが含まれるパケットは、No.79のパケット。これもNo.45のパケットと同様にPacket Detailsを見てみると、ASCIIデータのため_encryptedという文字列が確認できる。

以上3つのファイルから見つかった文字列をファイル名の順に結合すると以下のような文字列ができあがる。

ctf4b{This_communication_is_not_encrypted.}



Network Miner、tcpflowなどのツールを使ってファイルを抽出を行なったり、stringsコマンドでFLAGとなるテキストを見つけたりして解くこともできる。


